# This Travis job script has been generated by a script via
#
#   haskell-ci '--config=cabal.haskell-ci' '--output=.travis.yml' 'cabal.project'
#
# For more information, see https://github.com/haskell-CI/haskell-ci
#
# version: 0.3
#
language: c
dist: xenial

git:
  submodules: false  # whether to recursively clone submodules

branches:
  only:
    - master

cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store

before_cache:
  - rm -fv $CABALHOME/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $CABALHOME/packages/hackage.haskell.org/00-index.*
  - rm -fv $CABALHOME/packages/hackage.haskell.org/*.json
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.cache
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar.idx

  - rm -rfv $CABALHOME/packages/head.hackage

matrix:
  include:
    - compiler: "ghc-8.6.4"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.4,ghc-8.6.4], sources: [hvr-ghc]}}
    - compiler: "ghc-8.4.4"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.4,ghc-8.4.4], sources: [hvr-ghc]}}
    - compiler: "ghc-8.2.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.4,ghc-8.2.2], sources: [hvr-ghc]}}
    - compiler: "ghc-8.0.2"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-2.4,ghc-8.0.2], sources: [hvr-ghc]}}

before_install:
  - HC=/opt/ghc/bin/${CC}
  - HCPKG=${HC/ghc/ghc-pkg}
  - unset CC
  - CABAL=/opt/ghc/bin/cabal
  - CABALHOME=$HOME/.cabal
  - export PATH="$CABALHOME/bin:$PATH"
  - ROOTDIR=$(pwd)
  - HCNUMVER=$(( $(${HC} --numeric-version|sed -E 's/([0-9]+)\.([0-9]+)\.([0-9]+).*/\1 * 10000 + \2 * 100 + \3/') ))
  - echo $HCNUMVER

install:
  - ${CABAL} --version
  - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - TEST=--enable-tests
  - BENCH=--enable-benchmarks
  - GHCHEAD=${GHCHEAD-false}
  - travis_retry ${CABAL} update -v
  - sed -i.bak 's/^jobs:/-- jobs:/' $CABALHOME/config
  - rm -fv cabal.project cabal.project.local
  - "sed -i.bak 's/-- ghc-options:.*/ghc-options: -j2/' $CABALHOME/config"
  - grep -Ev -- '^\s*--' $CABALHOME/config | grep -Ev '^\s*$'
  - rm -f cabal.project
  - touch cabal.project
  - "printf 'packages: \"servant\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-client\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-client-core\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-http-streams\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-docs\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-foreign\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-server\"\\n' >> cabal.project"
  - "printf 'packages: \"doc/tutorial\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-machines\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-conduit\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-pipes\"\\n' >> cabal.project"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/basic-auth\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/curl-mock\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/basic-streaming\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/db-postgres-pool\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/db-sqlite-simple\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/file-upload\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/generic\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/https\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/pagination\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/testing\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/structuring-apis\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/using-custom-monad\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/using-free-client\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"doc/cookbook/open-id-connect\"\\n' >> cabal.project ; fi"
  - "echo 'constraints: foundation >=0.0.14' >> cabal.project"
  - "echo 'constraints: memory <0.14.12 || >0.14.12' >> cabal.project"
  - "echo 'allow-newer: servant-quickcheck:servant' >> cabal.project"
  - "echo 'allow-newer: servant-quickcheck:servant-client' >> cabal.project"
  - "echo 'allow-newer: servant-quickcheck:servant-server' >> cabal.project"
  - "echo 'allow-newer: servant-quickcheck:hspec' >> cabal.project"
  - "echo 'allow-newer: servant-quickcheck:http-client' >> cabal.project"
  - "echo 'optimization: False' >> cabal.project "
  - "printf 'write-ghc-environment-files: always\\n' >> cabal.project"
  - touch cabal.project.local
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | grep -vE -- '^(cookbook-basic-auth|cookbook-basic-streaming|cookbook-curl-mock|cookbook-db-postgres-pool|cookbook-db-sqlite-simple|cookbook-file-upload|cookbook-generic|cookbook-https|cookbook-pagination|cookbook-structuring-apis|cookbook-testing|cookbook-using-custom-monad|cookbook-using-free-client|open-id-connect|servant|servant-client|servant-client-core|servant-conduit|servant-docs|servant-foreign|servant-http-streams|servant-machines|servant-pipes|servant-server|tutorial)$' | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  - if [ -f "servant/configure.ac" ]; then (cd "servant" && autoreconf -i); fi
  - if [ -f "servant-client/configure.ac" ]; then (cd "servant-client" && autoreconf -i); fi
  - if [ -f "servant-client-core/configure.ac" ]; then (cd "servant-client-core" && autoreconf -i); fi
  - if [ -f "servant-http-streams/configure.ac" ]; then (cd "servant-http-streams" && autoreconf -i); fi
  - if [ -f "servant-docs/configure.ac" ]; then (cd "servant-docs" && autoreconf -i); fi
  - if [ -f "servant-foreign/configure.ac" ]; then (cd "servant-foreign" && autoreconf -i); fi
  - if [ -f "servant-server/configure.ac" ]; then (cd "servant-server" && autoreconf -i); fi
  - if [ -f "doc/tutorial/configure.ac" ]; then (cd "doc/tutorial" && autoreconf -i); fi
  - if [ -f "servant-machines/configure.ac" ]; then (cd "servant-machines" && autoreconf -i); fi
  - if [ -f "servant-conduit/configure.ac" ]; then (cd "servant-conduit" && autoreconf -i); fi
  - if [ -f "servant-pipes/configure.ac" ]; then (cd "servant-pipes" && autoreconf -i); fi
  - if [ -f "doc/cookbook/basic-auth/configure.ac" ]; then (cd "doc/cookbook/basic-auth" && autoreconf -i); fi
  - if [ -f "doc/cookbook/curl-mock/configure.ac" ]; then (cd "doc/cookbook/curl-mock" && autoreconf -i); fi
  - if [ -f "doc/cookbook/basic-streaming/configure.ac" ]; then (cd "doc/cookbook/basic-streaming" && autoreconf -i); fi
  - if [ -f "doc/cookbook/db-postgres-pool/configure.ac" ]; then (cd "doc/cookbook/db-postgres-pool" && autoreconf -i); fi
  - if [ -f "doc/cookbook/db-sqlite-simple/configure.ac" ]; then (cd "doc/cookbook/db-sqlite-simple" && autoreconf -i); fi
  - if [ -f "doc/cookbook/file-upload/configure.ac" ]; then (cd "doc/cookbook/file-upload" && autoreconf -i); fi
  - if [ -f "doc/cookbook/generic/configure.ac" ]; then (cd "doc/cookbook/generic" && autoreconf -i); fi
  - if [ -f "doc/cookbook/https/configure.ac" ]; then (cd "doc/cookbook/https" && autoreconf -i); fi
  - if [ -f "doc/cookbook/pagination/configure.ac" ]; then (cd "doc/cookbook/pagination" && autoreconf -i); fi
  - if [ -f "doc/cookbook/testing/configure.ac" ]; then (cd "doc/cookbook/testing" && autoreconf -i); fi
  - if [ -f "doc/cookbook/structuring-apis/configure.ac" ]; then (cd "doc/cookbook/structuring-apis" && autoreconf -i); fi
  - if [ -f "doc/cookbook/using-custom-monad/configure.ac" ]; then (cd "doc/cookbook/using-custom-monad" && autoreconf -i); fi
  - if [ -f "doc/cookbook/using-free-client/configure.ac" ]; then (cd "doc/cookbook/using-free-client" && autoreconf -i); fi
  - if [ -f "doc/cookbook/open-id-connect/configure.ac" ]; then (cd "doc/cookbook/open-id-connect" && autoreconf -i); fi
  - rm -f cabal.project.freeze
  - rm -rf .ghc.environment.* "servant"/dist "servant-client"/dist "servant-client-core"/dist "servant-http-streams"/dist "servant-docs"/dist "servant-foreign"/dist "servant-server"/dist "doc/tutorial"/dist "servant-machines"/dist "servant-conduit"/dist "servant-pipes"/dist "doc/cookbook/basic-auth"/dist "doc/cookbook/curl-mock"/dist "doc/cookbook/basic-streaming"/dist "doc/cookbook/db-postgres-pool"/dist "doc/cookbook/db-sqlite-simple"/dist "doc/cookbook/file-upload"/dist "doc/cookbook/generic"/dist "doc/cookbook/https"/dist "doc/cookbook/pagination"/dist "doc/cookbook/testing"/dist "doc/cookbook/structuring-apis"/dist "doc/cookbook/using-custom-monad"/dist "doc/cookbook/using-free-client"/dist "doc/cookbook/open-id-connect"/dist
  - DISTDIR=$(mktemp -d /tmp/dist-test.XXXX)

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
  # test that source-distributions can be generated
  - echo Packaging... && echo -en 'travis_fold:start:sdist\\r'
  - ${CABAL} new-sdist all
  - echo -en 'travis_fold:end:sdist\\r'
  - echo Unpacking... && echo -en 'travis_fold:start:unpack\\r'
  - mv dist-newstyle/sdist/*.tar.gz ${DISTDIR}/
  - cd ${DISTDIR} || false
  - find . -maxdepth 1 -name '*.tar.gz' -exec tar -xvf '{}' \;
  - rm -f cabal.project
  - touch cabal.project
  - "printf 'packages: \"servant-*/*.cabal\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-client-*/*.cabal\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-client-core-*/*.cabal\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-http-streams-*/*.cabal\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-docs-*/*.cabal\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-foreign-*/*.cabal\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-server-*/*.cabal\"\\n' >> cabal.project"
  - "printf 'packages: \"tutorial-*/*.cabal\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-machines-*/*.cabal\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-conduit-*/*.cabal\"\\n' >> cabal.project"
  - "printf 'packages: \"servant-pipes-*/*.cabal\"\\n' >> cabal.project"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-basic-auth-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-curl-mock-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-basic-streaming-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-db-postgres-pool-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-db-sqlite-simple-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-file-upload-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-generic-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-https-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-pagination-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-testing-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-structuring-apis-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-using-custom-monad-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"cookbook-using-free-client-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "if [ $HCNUMVER -eq 80404 ]  ||  [ $HCNUMVER -eq 80604 ] ; then printf 'packages: \"open-id-connect-*/*.cabal\"\\n' >> cabal.project ; fi"
  - "echo 'constraints: foundation >=0.0.14' >> cabal.project"
  - "echo 'constraints: memory <0.14.12 || >0.14.12' >> cabal.project"
  - "echo 'allow-newer: servant-quickcheck:servant' >> cabal.project"
  - "echo 'allow-newer: servant-quickcheck:servant-client' >> cabal.project"
  - "echo 'allow-newer: servant-quickcheck:servant-server' >> cabal.project"
  - "echo 'allow-newer: servant-quickcheck:hspec' >> cabal.project"
  - "echo 'allow-newer: servant-quickcheck:http-client' >> cabal.project"
  - "echo 'optimization: False' >> cabal.project "
  - "printf 'write-ghc-environment-files: always\\n' >> cabal.project"
  - touch cabal.project.local
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | grep -vE -- '^(cookbook-basic-auth|cookbook-basic-streaming|cookbook-curl-mock|cookbook-db-postgres-pool|cookbook-db-sqlite-simple|cookbook-file-upload|cookbook-generic|cookbook-https|cookbook-pagination|cookbook-structuring-apis|cookbook-testing|cookbook-using-custom-monad|cookbook-using-free-client|open-id-connect|servant|servant-client|servant-client-core|servant-conduit|servant-docs|servant-foreign|servant-http-streams|servant-machines|servant-pipes|servant-server|tutorial)$' | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  - echo -en 'travis_fold:end:unpack\\r'

  - echo Building with tests and benchmarks... && echo -en 'travis_fold:start:build-everything\\r'
  # build & run tests, build benchmarks
  - ${CABAL} new-build -w ${HC} ${TEST} ${BENCH} all
  - echo -en 'travis_fold:end:build-everything\\r'
  - ${CABAL} new-test -w ${HC} ${TEST} ${BENCH} all

  - echo Haddock... && echo -en 'travis_fold:start:haddock\\r'
  # haddock
  - ${CABAL} new-haddock -w ${HC} ${TEST} ${BENCH} all

  - echo -en 'travis_fold:end:haddock\\r'
# REGENDATA ["--config=cabal.haskell-ci","--output=.travis.yml","cabal.project"]
# EOF
